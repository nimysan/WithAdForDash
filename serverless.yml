service: with-ad-for-dash

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1 # Lambda@Edge必须部署在us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - lambda:GetFunction
            - lambda:EnableReplication*
          Resource: "*"

resources:
  Resources:
    LambdaEdgeRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: lambda-edge-role
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
                  - edgelambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

# lambdaHashingVersion: 20201221

plugins:
       - serverless-lambda-edge-pre-existing-cloudfront

functions:
  viewerRequestV2:
    handler: src/handler.handleViewerRequest
    memorySize: 128
    timeout: 5
    role: !GetAtt LambdaEdgeRole.Arn
    events:
      - preExistingCloudFront:
        # ---- Mandatory Properties -----
          distributionId: E1UZTGEU927TUF # CloudFront distribution ID you want to associate
          eventType: viewer-request # Choose event to trigger your Lambda function
          pathPattern: '*' # Specifying the CloudFront behavior
          includeBody: false # Whether including body or not within request
        # ---- Optional Property -----
          stage: dev # Specify the stage at which you want this CloudFront distribution to be updated
          
  # originResponseV2:
  #   handler: src/handler.handleOriginResponse
  #   memorySize: 128
  #   timeout: 5
  #   role: !GetAtt LambdaEdgeRole.Arn
  #   events:
  #     - preExistingCloudFront:
  #       # ---- Mandatory Properties -----
  #         distributionId: E1UZTGEU927TUF # CloudFront distribution ID you want to associate
  #         eventType: origin-response # Choose event to trigger your Lambda function
  #         pathPattern: '*' # Specifying the CloudFront behavior
  #         includeBody: false # Whether including body or not within request
  #       # ---- Optional Property -----
  #         stage: dev # Specify the stage at which you want this CloudFront distribution to be updated

custom:
  deploymentBucket: 'with-ad-for-dash-deployment'
